<?xml version="1.0" encoding="UTF-8"?>
<beans:beans 
	xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
		   http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		   http://www.springframework.org/schema/security
		   http://www.springframework.org/schema/security/spring-security.xsd">

	<beans:bean name="bcryptEncoder"
    class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>
	
	<!-- Authentication using a memory user list -->
	<!-- 使用数据库验证，涉及users表和authorities表 -->
	<!-- <authentication-manager alias="authenticationManager">
		<authentication-provider> 
			<user-service> 
				<user name="admin" password="root" authorities="ROLE_USER, ROLE_HR, ROLE_ADMIN" /> 
			</user-service> 
		</authentication-provider> 
		<authentication-provider>
			<password-encoder ref="bcryptEncoder"/>
			<jdbc-user-service data-source-ref="dataSource" />
		</authentication-provider>
	</authentication-manager> -->
	
	<authentication-manager>
        <authentication-provider ref="authenticationProvider"/>
    </authentication-manager>
    
    <beans:bean name="authenticationProvider" class="org.springframework.security.authentication.dao.DaoAuthenticationProvider">
		<beans:property name="userDetailsService" ref="userDetailsService"/>
		<beans:property name="passwordEncoder" ref="bcryptEncoder"/>
	</beans:bean>
	
	<beans:bean name="userDetailsService" class="com.gxufe.smarcampus.security.client.DefaultUserDetailsService">
	</beans:bean>
	
	<beans:bean name="passwordEncoder" class="com.gxufe.smarcampus.common.util.PasswordEncoderFactoryBean">
		<beans:property name="type" value="md5"/>
	</beans:bean>
	
	
	<!-- 资源目录不需要授权访问 -->
	<http pattern="/resources/**" security="none"/>
	
	<http use-expressions="true">
		<!-- Login pages -->
		<form-login 
			login-page="/login" authentication-failure-url="/login?loginError=1" 
			default-target-url="/"/>
		<!-- logout配置 -->
		<logout invalidate-session="true" delete-cookies="JSESSIONID"
			logout-url="/logout" logout-success-url="/" />
		<logout />
		<!-- Security zones -->
		<!-- /user目录下必须是授权用户 -->
		<!-- permitAll和none是有区别的，permitAll指所有登录和未登录人员都可以访问，这个设置是需要经过security filter的，而none也指所有人员都可以访问，但不会经过sec filter-->
		 <intercept-url pattern="/login" access="permitAll"/> 
		 <intercept-url pattern="/user/**" access="hasRole('ROLE_SC')"/> 
		<intercept-url pattern="/anony/**" access="permitAll"/>
		<intercept-url pattern="/manager/**" access="hasRole('ROLE_SC')"/>
		<intercept-url pattern="/system/**" access="hasRole('ROLE_ADMIN')" />
		<intercept-url pattern="/uploads/**" access="hasAnyRole('ROLE_SC','ROLE_ADMIN')"/>
		<!-- 只有拥有权限的人才能访问  -->
		<intercept-url pattern="/**" access="isAuthenticated()" />

		<!-- CSRF -->
<!-- 		<csrf /> -->
	</http>

</beans:beans>